# Written by Zhen Feng of Tsinghua University
# The code is written for the simulation experiment of my research papers.
# Dataset is from CAIDA

1. ShortestPath.py
Define two algorithms to calculate the shortest path: Dijkstra and Floyd.
2. NoValley.py
Calculate all the no-valley path from a given AS to all ASes in the Internet.
3. AlgoShortestPath.py
Read the topology data into a dict structure, then recall the shortest path functions to compute the shortest path from a input AS to all ASes in the Internet, finally store the result into a pickle file of the current directory.
4. AlgoNoValley.py
The differences from the above the AlgoShortestPath.py file is that it calculate the no-valley path rather than the shortest path, also, the graph structure is different for the two algorithms.
5. CalPathLen.py
For a given AS, read the corresponding pickle file, calculate the average, max, and min AS hops.
6. GenRouteTable.py
Generate route table for a given AS.
algo=0 for shortest path, and algo=1 for no-valley path.
7. SimRouteTable.py
Generate route tables for all ASes you care.
8. SimMain
The main simulation procedure.
Generate request number, distribution, cache size, cache ratio, and etc.
It will output the path length and profit of the two different algorithms (shortest or no-valley) for ASes you care for.



